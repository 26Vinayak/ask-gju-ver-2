[{"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\index.js":"1","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\App.js":"2","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Quora.js":"3","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\auth\\Login.js":"4","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Widget.js":"5","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Feed.js":"6","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Sidebar.js":"7","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\QHeader.js":"8","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\WidgetContent.js":"9","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\QuorBox.js":"10","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Post.js":"11","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\SidebarOptions.js":"12"},{"size":232,"mtime":1628510312129,"results":"13","hashOfConfig":"14"},{"size":730,"mtime":1629871433830,"results":"15","hashOfConfig":"14"},{"size":486,"mtime":1629869361019,"results":"16","hashOfConfig":"14"},{"size":3486,"mtime":1629871521939,"results":"17","hashOfConfig":"14"},{"size":382,"mtime":1628506681355,"results":"18","hashOfConfig":"14"},{"size":586,"mtime":1628506921259,"results":"19","hashOfConfig":"14"},{"size":242,"mtime":1628506681353,"results":"20","hashOfConfig":"14"},{"size":5200,"mtime":1628510176569,"results":"21","hashOfConfig":"14"},{"size":2424,"mtime":1628506681356,"results":"22","hashOfConfig":"14"},{"size":816,"mtime":1628509941151,"results":"23","hashOfConfig":"14"},{"size":5935,"mtime":1628510295115,"results":"24","hashOfConfig":"14"},{"size":2643,"mtime":1628506681354,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"q48cel",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\index.js",[],["54","55"],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\App.js",["56","57","58"],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Quora.js",["59","60","61","62"],"import React from \"react\";\r\nimport Feed from \"./Feed.js\";\r\nimport QHeader from \"./QHeader\";\r\nimport \"./Quora.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Widget from \"./Widget.js\";\r\n\r\n\r\nfunction Quora() {\r\n  return (\r\n    <div className=\"quora\">\r\n      {/* <QHeader /> */}\r\n      <div className=\"quora__content\">\r\n        {/* <Sidebar />\r\n        <Feed />\r\n        <Widget /> */}\r\n        <h1>YOO I am back with mern</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quora;\r\n","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\auth\\Login.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Widget.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Feed.js",["63","64"],"import React, { useEffect, useState } from \"react\";\r\nimport QuorBox from \"./QuorBox\";\r\nimport \"./Feed.css\";\r\nimport Post from \"./Post\";\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <QuorBox />\r\n      {posts.map(({ id, questions }) => (\r\n        <Post\r\n          key={id}\r\n          Id={id}\r\n          question={questions.question}\r\n          imageUrl={questions.imageUrl}\r\n          timestamp={questions.timestamp}\r\n          users={questions.user}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Sidebar.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\QHeader.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\WidgetContent.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\QuorBox.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Post.js",["65","66"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Post.css\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\r\nimport Modal from \"react-modal\";\r\n\r\nfunction Post({ Id, question, imageUrl, timestamp, users }) {\r\n  let user = null;\r\n\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n  const questionId = null;\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [getAnswers, setGetAnswers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // if (questionId) {\r\n    //   db.collection(\"questions\")\r\n    //     .doc(questionId)\r\n    //     .collection(\"answer\")\r\n    //     .orderBy(\"timestamp\", \"desc\")\r\n    //     .onSnapshot((snapshot) =>\r\n    //       setGetAnswers(\r\n    //         snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\r\n    //       )\r\n    //     );\r\n    // }\r\n  }, [questionId]);\r\n\r\n  const handleAnswer = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (questionId) {\r\n      // db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\r\n      //   user: user,\r\n      //   answer: answer,\r\n      //   questionId: questionId,\r\n      //   timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      // });\r\n    }\r\n    console.log(questionId);\r\n    setAnswer(\"\");\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"post\"\r\n      // onClick={() =>\r\n      //   dispatch(\r\n      //     setQuestionInfo({\r\n      //       questionId: Id,\r\n      //       questionName: question,\r\n      //     })\r\n      //   )\r\n      // }\r\n    >\r\n      <div className=\"post__info\">\r\n        <Avatar\r\n          src={\r\n            users.photo\r\n              ? users.photo\r\n              : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n          }\r\n        />\r\n        <h4>{users.displayName ? users.displayName : users.email}</h4>\r\n        <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\r\n      </div>\r\n      <div className=\"post__body\">\r\n        <div className=\"post__question\">\r\n          <p>{question}</p>\r\n          <button\r\n            onClick={() => setIsModalOpen(true)}\r\n            className=\"post__btnAnswer\"\r\n          >\r\n            Answer\r\n          </button>\r\n          <Modal\r\n            isOpen={IsmodalOpen}\r\n            onRequestClose={() => setIsModalOpen(false)}\r\n            shouldCloseOnOverlayClick={false}\r\n            style={{\r\n              overlay: {\r\n                width: 680,\r\n                height: 550,\r\n                backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                zIndex: \"1000\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                marginTop: \"-250px\",\r\n                marginLeft: \"-350px\",\r\n              },\r\n            }}\r\n          >\r\n            <div className=\"modal__question\">\r\n              <h1>{question}</h1>\r\n              <p>\r\n                asked by{\" \"}\r\n                <span className=\"name\">\r\n                  {users.displayName ? users.displayName : users.email}\r\n                </span>{\" \"}\r\n                {\"\"}\r\n                on{\" \"}\r\n                <span className=\"name\">\r\n                  {new Date(timestamp?.toDate()).toLocaleString()}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"modal__answer\">\r\n              <textarea\r\n                value={answer}\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n                placeholder=\"Enter Your Answer\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"modal__button\">\r\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n                Cancel\r\n              </button>\r\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\r\n                Add Answer\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div className=\"post__answer\">\r\n          {getAnswers.map(({ id, answers }) => (\r\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\r\n              {Id === answers.questionId ? (\r\n                <span>\r\n                  {answers.answer}\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      color: \"gray\",\r\n                      fontSize: \"small\",\r\n                      display: \"flex\",\r\n                      right: \"0px\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#b92b27\" }}>\r\n                      {answers.user.displayName\r\n                        ? answers.user.displayName\r\n                        : answers.user.email}{\" \"}\r\n                      on{\" \"}\r\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <img src={imageUrl} alt=\"\" />\r\n      </div>\r\n      <div className=\"post__footer\">\r\n        <div className=\"post__footerAction\">\r\n          <ArrowUpwardOutlinedIcon />\r\n          <ArrowDownwardOutlinedIcon />\r\n        </div>\r\n\r\n        <RepeatOutlinedIcon />\r\n        <ChatBubbleOutlineOutlinedIcon />\r\n        <div className=\"post__footerLeft\">\r\n          <ShareOutlined />\r\n          <MoreHorizOutlined />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\SidebarOptions.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"75","line":5,"column":50,"nodeType":"73","messageId":"74","endLine":5,"endColumn":54},{"ruleId":"71","severity":1,"message":"76","line":10,"column":7,"nodeType":"73","messageId":"74","endLine":10,"endColumn":14},{"ruleId":"71","severity":1,"message":"77","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":12},{"ruleId":"71","severity":1,"message":"78","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":15},{"ruleId":"71","severity":1,"message":"79","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":15},{"ruleId":"71","severity":1,"message":"80","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"81","line":7,"column":17,"nodeType":"73","messageId":"74","endLine":7,"endColumn":25},{"ruleId":"71","severity":1,"message":"82","line":12,"column":7,"nodeType":"73","messageId":"74","endLine":12,"endColumn":11},{"ruleId":"71","severity":1,"message":"83","line":17,"column":22,"nodeType":"73","messageId":"74","endLine":17,"endColumn":35},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'history' is assigned a value but never used.","'Feed' is defined but never used.","'QHeader' is defined but never used.","'Sidebar' is defined but never used.","'Widget' is defined but never used.","'setPosts' is assigned a value but never used.","'user' is assigned a value but never used.","'setGetAnswers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]